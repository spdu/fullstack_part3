{"version":3,"sources":["components/Person.js","components/Persons.js","services/service.js","components/PersonForm.js","components/Notification.js","App.js","index.js"],"names":["Person","person","removePerson","name","number","onClick","window","confirm","Persons","persons","map","key","id","baseUrl","axios","get","then","response","data","newObject","post","delete","PersonForm","newName","newNumber","setNewName","notificationMessage","setNewNumber","setPersons","setNotificationMessage","setPerson","personService","returnedPerson","concat","setTimeout","onSubmit","event","preventDefault","names","numbers","includes","alert","value","onChange","target","type","Notification","message","className","App","useState","useEffect","console","log","initialPersons","find","n","filter","ReactDOM","render","document","getElementById"],"mappings":"uOAUeA,EARA,SAAC,GAA4B,IAA3BC,EAA0B,EAA1BA,OAAQC,EAAkB,EAAlBA,aAErB,OAAO,6BACFD,EAAOE,KADL,IACYF,EAAOG,OACtB,4BAAQC,QAAS,WAAUC,OAAOC,QAAP,4BAAoCN,EAAOE,KAA3C,QAAqDD,MAAhF,YCcOM,EAfC,SAAC,GAA6B,IAA5BC,EAA2B,EAA3BA,QAASP,EAAkB,EAAlBA,aAEvB,OACIO,EAAQC,KAAI,SAACT,GAAD,OACZ,yBAAKU,IAAMV,EAAOW,IACd,kBAAC,EAAD,CACAX,OAAQA,EACRC,aAAc,kBAAMA,EAAaD,EAAOE,c,gBCX9CU,EAAU,eAsBD,EApBA,WAGT,OAFcC,IAAMC,IAAIF,GAETG,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAiBhC,EAdA,SAAAC,GAEX,OADgBL,IAAMM,KAAKP,EAASM,GACrBH,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAY9B,EALA,SAAAN,GAEX,OADgBE,IAAMO,OAAN,UAAgBR,EAAhB,YAA2BD,IAC5BI,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SCqC5BI,EAtDE,SAAC,GAAsH,IAArHb,EAAoH,EAApHA,QAASc,EAA2G,EAA3GA,QAASC,EAAkG,EAAlGA,UAAgCC,GAAkE,EAAvFC,oBAAuF,EAAlED,YAAYE,EAAsD,EAAtDA,aAAcC,EAAwC,EAAxCA,WAAYC,EAA4B,EAA5BA,uBAerGC,EAAY,WAKhBC,EAJqB,CACnB5B,KAAMoB,EACNnB,OAAQoB,IAITR,MAAK,SAAAgB,GACJJ,EAAWnB,EAAQwB,OAAOD,OAE5BH,EAAuB,SAAD,OACXN,IAEXW,YAAW,WACTL,EAAuB,QACtB,MAOL,OACE,0BAAMM,SAlCQ,SAACC,GAEfA,EAAMC,iBACN,IAAMC,EAAQ7B,EAAQC,KAAI,SAAAD,GAAO,OAAIA,EAAQN,QACvCoC,EAAU9B,EAAQC,KAAI,SAAAD,GAAO,OAAIA,EAAQL,UAE/CkC,EAAME,SAASjB,GAAWkB,MAAM,GAAD,OAAIlB,EAAJ,iCADLgB,EAAQC,SAAShB,GAAaiB,MAAM,cAAD,OAAejB,EAAf,iCAA0DM,IAGvHL,EAAW,IACXE,EAAa,MA0BT,sCACQ,2BAAOe,MAAOnB,EAASoB,SARZ,SAACP,GAAD,OAAWX,EAAWW,EAAMQ,OAAOF,WAWtD,wCACU,2BAAOA,MAAOlB,EAAWmB,SAXd,SAACP,GAAD,OAAWT,EAAaS,EAAMQ,OAAOF,WAa1D,6BACE,4BAAQG,KAAK,UAAb,UCpCOC,EAZI,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACpB,OAAgB,OAAZA,EACK,KAIP,yBAAKC,UAAU,WACZD,ICgDME,EAnDH,WAAO,IAAD,EACeC,mBAAS,IADxB,mBACRzC,EADQ,KACCmB,EADD,OAEgBsB,mBAAS,IAFzB,mBAER3B,EAFQ,KAECE,EAFD,OAGoByB,mBAAS,IAH7B,mBAGR1B,EAHQ,KAGGG,EAHH,OAIsCuB,mBAAS,MAJ/C,mBAITxB,EAJS,KAIYG,EAJZ,KAMhBsB,qBAAU,WACRC,QAAQC,IAAI,UACZtB,IAEGf,MAAK,SAAAsC,GACJF,QAAQC,IAAI,qBACZzB,EAAW0B,QAEd,IAqBH,OACE,6BACE,yCACA,kBAAC,EAAD,CAAcP,QAASrB,IACvB,yCACE,kBAAC,EAAD,CAAYjB,QAASA,EAASc,QAASA,EAASC,UAAWA,EAAWE,oBAAqBA,EAC3FD,WAAYA,EAAYE,aAAcA,EAAcC,WAAYA,EAAYC,uBAAwBA,IACtG,uCACA,6BACE,kBAAC,EAAD,CAASpB,QAASA,EAASP,aA5BZ,SAAAC,GACnB,IAAMF,EAASQ,EAAQ8C,MAAK,SAAAC,GAAC,OAAIA,EAAErD,OAASA,KAC5CiD,QAAQC,IAAI,aAAcpD,GAC1B8B,EACQ9B,EAAOW,IACdI,KACCY,EAAWnB,EAAQgD,QAAO,SAAAD,GAAC,OAAIA,EAAErD,OAASA,MAC1C0B,EAAuB,WAAD,OACT5B,EAAOE,OAEpB+B,YAAW,WACTL,EAAuB,QACtB,YC7BT6B,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.df4b8c28.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Person = ({person, removePerson}) => {\r\n    \r\n    return <div>\r\n        {person.name} {person.number}\r\n        <button onClick={() => {if(window.confirm(`Remove the person ${person.name} ?`))removePerson()}}>remove</button>\r\n        </div>\r\n}\r\n\r\nexport default Person","import React from 'react'\r\nimport Person from './Person'\r\n\r\n//const Rows = () => persons.map((value) => {return <div key={value.name}>{value.name} {value.number}</div>}) \r\n//if this was used, person.js would be left out\r\nconst Persons = ({persons, removePerson}) => {\r\n\r\n    return (\r\n        persons.map((person) => \r\n        <div key= {person.id}>\r\n            <Person \r\n            person={person} \r\n            removePerson={() => removePerson(person.name)}\r\n            />\r\n        </div>) \r\n        \r\n        \r\n        \r\n        )\r\n}\r\nexport default Persons","import axios from 'axios'\r\nconst baseUrl = '/api/persons'\r\n\r\nconst getAll = () => {\r\n    const request = axios.get(baseUrl)\r\n    //const nonExisting = {id: 10000, content: 'This note is not saved to server',date: '2019-05-30T17:30:31.098Z',important: true, }\r\n      return request.then(response => response.data)//.concat(nonExisting))\r\n    }\r\n\r\nconst create = newObject => {\r\n    const request = axios.post(baseUrl, newObject)\r\n    return request.then(response => response.data)\r\n  }\r\n\r\nconst update = (id, newObject) => {\r\n    const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n    return request.then(response => response.data)\r\n  }\r\nconst remove = id => {\r\n    const request = axios.delete(`${baseUrl}/${id}`)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nexport default { getAll, create, update, remove}","import React from 'react'\r\nimport personService from '../services/service'\r\n\r\nconst PersonForm = ({persons, newName, newNumber, notificationMessage, setNewName, setNewNumber, setPersons, setNotificationMessage}) => {\r\n\r\n  \r\n  \r\nconst AddPerson = (event) => {\r\n\r\n    event.preventDefault()\r\n    const names = persons.map(persons => persons.name)\r\n    const numbers = persons.map(persons => persons.number)\r\n    const checkNumber = () => numbers.includes(newNumber) ? alert(`The number ${newNumber} is already in the phonebook`) : setPerson()\r\n    names.includes(newName) ? alert(`${newName} is already in the phonebook`) : checkNumber()\r\n    \r\n    setNewName('')\r\n    setNewNumber('') \r\n  }\r\n  const setPerson = () => {\r\n    const personObject = {\r\n      name: newName,\r\n      number: newNumber\r\n    }\r\n    personService\r\n    .create(personObject)\r\n    .then(returnedPerson => {\r\n      setPersons(persons.concat(returnedPerson))\r\n    })\r\n    setNotificationMessage(\r\n      `Added ${newName}`\r\n    )\r\n    setTimeout(() => {\r\n      setNotificationMessage(null)\r\n    }, 5000)\r\n  }\r\n  const handleNameChange = (event) => setNewName(event.target.value)\r\n  const handleNumberChange = (event) => setNewNumber(event.target.value)\r\n\r\n\r\n  \r\n  return (\r\n    <form onSubmit={AddPerson} >\r\n        <div>\r\n          name: <input value={newName} onChange= {handleNameChange}/>\r\n          \r\n        </div>\r\n        <div>\r\n          number: <input value={newNumber} onChange= {handleNumberChange}/>\r\n        </div>\r\n        <div>\r\n          <button type=\"submit\">add</button>\r\n        </div>\r\n      </form>\r\n)\r\n}\r\n  \r\n\r\n  export default PersonForm","import React from 'react'\r\n\r\nconst Notification = ({ message }) => {\r\n    if (message === null) {\r\n      return null\r\n    }\r\n  \r\n    return (\r\n      <div className=\"success\">\r\n        {message}\r\n      </div>\r\n    )\r\n  }\r\n\r\n  export default Notification","import React, { useState, useEffect } from 'react'\nimport Persons from './components/Persons'\nimport PersonForm from './components/PersonForm'\nimport personService from './services/service'\nimport Notification from './components/Notification'\n\nconst App = () => {\n  const [ persons, setPersons] = useState([]) \n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber ] = useState('')\n  const [notificationMessage, setNotificationMessage] = useState(null)\n\n  useEffect(() => {\n    console.log('effect')\n    personService\n      .getAll()\n      .then(initialPersons => {\n        console.log('promise fulfilled')\n        setPersons(initialPersons)\n      })\n  }, [])\n\n  const removePerson = name => {\n    const person = persons.find(n => n.name === name)\n    console.log(\"person is:\", person)\n    personService\n    .remove(person.id)\n    .then( \n      setPersons(persons.filter(n => n.name !== name)),\n      setNotificationMessage(\n        `Removed ${person.name}`\n      ),\n      setTimeout(() => {\n        setNotificationMessage(null)\n      }, 5000)\n    )\n  }\n\n\n//Passing all these props to the PersonForm component... there must be a way to refactor it\n//No filter as doing the 3 credit course as of now\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification message={notificationMessage} />\n      <h3>Add a new</h3>\n        <PersonForm persons={persons} newName={newName} newNumber={newNumber} notificationMessage={notificationMessage}\n        setNewName={setNewName} setNewNumber={setNewNumber} setPersons={setPersons} setNotificationMessage={setNotificationMessage}/> \n      <h2>Numbers</h2>\n      <div>\n        <Persons persons={persons} removePerson={removePerson}/> \n      </div>\n    </div>\n  )\n\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n"],"sourceRoot":""}